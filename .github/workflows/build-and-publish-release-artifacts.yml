name: Build and Publish Release Artifacts

on:
  push:
    tags:
      - '*'

jobs:

  build-and-publish:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3.0.2

    - name: Test
      run: go test -v ./...

    - run: mkdir roadmap-linux-amd64 && env GOOS=linux GOARCH=amd64 go build -o roadmap-linux-amd64 ./... && zip -r roadmap-linux-amd64.zip roadmap-linux-amd64
    - run: mkdir roadmap-windows-amd64 && env GOOS=windows GOARCH=amd64 go build -o roadmap-windows-amd64 ./... && zip -r roadmap-windows-amd64.zip roadmap-windows-amd64

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: v${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: roadmap-linux-amd64.zip
        asset_path: ./roadmap-linux-amd64.zip
        asset_content_type: application/zip

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: roadmap-windows-amd64.zip
        asset_path: ./roadmap-windows-amd64.zip
        asset_content_type: application/zip
